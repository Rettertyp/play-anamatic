{"version":3,"file":"main.js","mappings":";;;;;;;AAAA;;;;;;ACAA;;;;;;;;;;ACAA,wCAAwC;AAExC,gDAAiD;AACjD,6CAA2C;AAC3C,uCAA2C;AAOpC,IAAM,SAAS,GAAf,MAAM,SAAS;CAAG;AAAZ,SAAS;IALrB,mBAAM,EAAC;QACJ,OAAO,EAAE,CAAC,kBAAU,CAAC;QACrB,WAAW,EAAE,CAAC,8BAAa,CAAC;QAC5B,SAAS,EAAE,CAAC,wBAAU,CAAC;KAC1B,CAAC;GACW,SAAS,CAAG;AAAZ,8BAAS;;;;;;;ACXtB;;;;;;;;;;;ACAA,wCAAwD;AAExD,6CAA2C;AAGpC,IAAM,aAAa,GAAnB,MAAM,aAAa;IACtB,YAA6B,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAG,CAAC;IAGvD,SAAS,CAAgB,IAAY;QACjC,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAC3C,CAAC;CACJ;AAJG;IAAC,gBAAG,EAAC,OAAO,CAAC;IACF,qCAAK,EAAC,MAAM,CAAC;;;;8CAEvB;AANQ,aAAa;IADzB,uBAAU,GAAE;iEAEgC,wBAAU,oBAAV,wBAAU;GAD1C,aAAa,CAOzB;AAPY,sCAAa;;;;;;;;;;;;;ACL1B,wCAAoD;AACpD,uCAA4C;AAE5C,sCAAqC;AAG9B,IAAM,UAAU,kBAAhB,MAAM,UAAU;IAGnB,YAA6B,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAFpC,SAAI,GAAG,IAAI,eAAM,CAAC,YAAU,CAAC,IAAI,CAAC,CAAC;QAInC,YAAO,GAAG,qCAAqC,CAAC;IAFT,CAAC;IAIzD,KAAK,CAAC,SAAS,CAAC,IAAY;QACxB,MAAM,QAAQ,GAAiB,CAC3B,MAAM,wBAAa,EAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,CACnF,CAAC,IAAI,CAAC;QACP,OAAO,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;IAC/B,CAAC;CACJ;AAbY,UAAU;IADtB,uBAAU,GAAE;iEAIiC,mBAAW,oBAAX,mBAAW;GAH5C,UAAU,CAatB;AAbY,gCAAU;;;;;;;ACNvB;;;;;;ACAA;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;ACtBA;;;GAGG;;AAEH,wCAAwC;AACxC,sCAA2C;AAE3C,4CAA6C;AAE7C,KAAK,UAAU,SAAS;IACpB,MAAM,GAAG,GAAG,MAAM,kBAAW,CAAC,MAAM,CAAC,sBAAS,CAAC,CAAC;IAChD,MAAM,YAAY,GAAG,KAAK,CAAC;IAC3B,GAAG,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;IAClC,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;IACtC,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACvB,eAAM,CAAC,GAAG,CAAC,kDAAkD,IAAI,IAAI,YAAY,EAAE,CAAC,CAAC;AACzF,CAAC;AAED,SAAS,EAAE,CAAC","sources":["webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///./src/app/app.module.ts","webpack:///external commonjs \"tslib\"","webpack:///./src/app/app.controller.ts","webpack:///./src/app/app.service.ts","webpack:///external commonjs \"@nestjs/axios\"","webpack:///external commonjs \"rxjs\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","import { Module } from '@nestjs/common';\r\n\r\nimport { AppController } from './app.controller';\r\nimport { AppService } from './app.service';\r\nimport { HttpModule } from '@nestjs/axios';\r\n\r\n@Module({\r\n    imports: [HttpModule],\r\n    controllers: [AppController],\r\n    providers: [AppService],\r\n})\r\nexport class AppModule {}\r\n","module.exports = require(\"tslib\");","import { Controller, Get, Param } from '@nestjs/common';\r\n\r\nimport { AppService } from './app.service';\r\n\r\n@Controller()\r\nexport class AppController {\r\n    constructor(private readonly appService: AppService) {}\r\n\r\n    @Get(':word')\r\n    checkWord(@Param('word') word: string) {\r\n        return this.appService.checkWord(word);\r\n    }\r\n}\r\n","import { Injectable, Logger } from '@nestjs/common';\r\nimport { HttpService } from '@nestjs/axios';\r\nimport { dwdsAnswer } from '../assets/types';\r\nimport { lastValueFrom } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AppService {\r\n    private readonly _log = new Logger(AppService.name);\r\n\r\n    constructor(private readonly httpService: HttpService) {}\r\n\r\n    private readonly dwdsUrl = 'https://www.dwds.de/api/wb/snippet/';\r\n\r\n    async checkWord(word: string): Promise<boolean> {\r\n        const dwdsData: dwdsAnswer[] = (\r\n            await lastValueFrom(this.httpService.get(this.dwdsUrl, { params: { q: word } }))\r\n        ).data;\r\n        return dwdsData.length > 0;\r\n    }\r\n}\r\n","module.exports = require(\"@nestjs/axios\");","module.exports = require(\"rxjs\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\r\n * This is not a production server yet!\r\n * This is only a minimal backend to get started.\r\n */\r\n\r\nimport { Logger } from '@nestjs/common';\r\nimport { NestFactory } from '@nestjs/core';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\nasync function bootstrap() {\r\n    const app = await NestFactory.create(AppModule);\r\n    const globalPrefix = 'api';\r\n    app.setGlobalPrefix(globalPrefix);\r\n    const port = process.env.PORT || 3000;\r\n    await app.listen(port);\r\n    Logger.log(`ðŸš€ Application is running on: http://localhost:${port}/${globalPrefix}`);\r\n}\r\n\r\nbootstrap();\r\n"],"names":[],"sourceRoot":""}